import time
def nested_sum(x):
    calc = 0
    for i in x:
        for num in i:
            calc+=num
    return calc

def cumsum(x):
    a = 0
    new_list = []
    new_list.append(x[0])
    for i in range(1,len(x)):
        x[i]+=x[a]
        new_list.append(x[i])
        a+=1
    return new_list

def middle(x):
    tam = 0
    lista=[]
    if len(x)%2==0:
        tam = len(x)//2
        lista.append(tam)
        lista.append(tam+1)
    else:
        tam = len(x)//2
        lista.append(tam+1)
    return lista

def chop(x):
    del x[0]
    del x[-1]
    return None

def is_sorted(x):
    a = 0
    for i in range(1,len(x)):
        if x[i] >= x[a]:
            continue
        else:
            return False
    return True

def is_anagram(x,y):
    for i in x:
        if x.count(i)==y.count(i):
            continue
        else:
            return False
    return True

def has_duplicates(x):
    for i in x:
        if x.count(i)>1:
            return True
    return False

def birthday_paradox(x):
    calc = (1.0 / 365) ** x
    for num in range((366 - x), 366):
        calc *= num
    calc = 1 - calc
    calc = calc*100
    return calc

def read_txt1(x):
    list=[]
    cont = -1
    cont2 = -1
    str=''
    for i in x:
        str+=i
    for i in str:
        cont+=1
        if i==' ':
            palavra = str[cont2+1:cont]
            cont2 = cont
            list.append(palavra)
    print(list)

def read_txt2(x):
    list=[]
    cont = -1
    cont2 = -1
    str=''
    for i in x:
        str+=i
    for i in str:
        cont+=1
        if i==' ':
            palavra = str[cont2+1:cont]
            cont2 = cont
            list = list + [palavra]
    print(list)

""""
txt = open("x.txt","r")
ini = time.time()
read_txt1(txt)
fim = time.time()
calc = fim - ini
print(calc)

txt = open("x.txt","r")
ini = time.time()
read_txt2(txt)
fim = time.time()
calc = fim - ini
print(calc)
"""

def in_bisect(list,pal,a):
    tamreal = len(list)
    tam = len(list)//2
    if pal[a] > list[tam][a] and list[tam] != pal:
        a+=1
        in_bisect(list,pal,a)
    elif pal[a] < list[tam][a] and list[tam] != pal:
        a+=1
        in_bisect(list,pal,a)
    elif pal[a] == list[tam][a] and list[tam] != pal:
        a+=1

    elif pal == list[tam-1]:
        return tam
    return None
''''
a = 0
print(in_bisect(["anuencia","analogo","amor","algoz","alienado","audacia"],"algoz",a))
'''

def par_inverso(x):
    lista = []
    for i in x:
        for y in x:
            if i == y[::-1]:
                lista.append(i)
                x.remove(y)
    return lista

print(par_inverso(["amor","roma","peixe","exiep"]))
